namespace = wc_suramar_events
### SURAMAR EVENTS ###
# 0001 - Opening event
# 0002 - You learn about the world beyond Suramar
# 0003 - You learn about the nightfallen
# 0010 - Someone informs you of mysterious happenings in the aqeducts
# 0011-0012 - Investigate the aqeducts
# 0020 - You remininsce on Ashara's rule
# 0030 - Visted by an Elune priestess
# 0040 - Learn about the Fal'dorei, event chain
# 0041  - Faldo'rei event chain

# Opening event for the leader of Suramar if barrier is up
wc_suramar_events.0001 = {
    type = character_event
    content_source = dlc_GOA
    title = wc_suramar_events.0001.t
    desc = wc_suramar_events.0001.d
    theme = suramar

    trigger = {
        root = { has_title = title:k_suramar }
        NOT = { has_global_variable = suramar_barrier_lowered_variable }
    }

    left_portrait = {
        character = root
        animation = personality_honorable
    }

    immediate = {
        custom_tooltip = {
            text = wc_suramar_events.0001_tt
            every_sub_realm_county = {
                add_county_modifier = {
                    modifier = wc_suramar_isolated_modifier
                }
            }
        }
    }

    # Focus on building the region
    option = {
        name = wc_suramar_events.001.a
        capital_county = {
            add_county_modifier = {
                modifier = wc_suramar_city_modifier
                years = 5
            }
        }
    }

    # Focus on my expanding my power
    option = {
        name = wc_suramar_events.001.b
        add_character_modifier = {
            modifier = wc_suramar_ruler_modifier
            years = 5
        }
    }
}

# You learn about the world outside of suramar
wc_suramar_events.0002 = {
    type = character_event
    content_source = dlc_GOA
    title = wc_suramar_events.0002.t
    desc = wc_suramar_events.0002.desc
    theme = suramar

    override_background = { reference = study }

    left_portrait = {
        character = root
        animation = stress
    }

    # You gain the decision
    option = {
        name = wc_suramar_events.0002.a
        trigger = {
            has_title = title:k_suramar
        }
        save_scope_as = suramar_ruler
        add_character_flag = had_outsider_event
        custom_tooltip = suramar_discover_outside_world_effect_tt
    }

    # Your liege gains the decision
    option = {
        name = wc_suramar_events.0002.b
        trigger = {
            NOT = { has_title = title:k_suramar }
        }
        title:k_suramar.holder = {
            save_scope_as = suramar_ruler
        }
        scope:suramar_ruler = { add_character_flag = had_outsider_event }
        custom_tooltip = suramar_discover_outside_world_effect_tt
    }
}

# You learn about the nightfallen
wc_suramar_events.0003 = {
    type = character_event
    content_source = dlc_GOA
    title = wc_suramar_events.0003.t
    desc = wc_suramar_events.0003.desc
    theme = suramar

    override_background = { reference = study }

    left_portrait = {
        character = root
        animation = stress
    }

    right_portrait = {
        trigger = { exists = scope:secondary_character }
        character = scope:secondary_character
        animation = sick
    }

    # You gain the decision
    option = {
        name = wc_suramar_events.0003.a
        if = {
            limit = {
                can_restore_arcandor_trigger = no
            }
            add_character_flag = had_nightfallen_event
            custom_tooltip = suramar_discover_nightfallen_effect_tt
        }
    }
}

wc_suramar_events.0010 = {
    type = character_event
    content_source = dlc_GOA
    title = wc_suramar_events.0010.t
    desc = {
        desc = wc_suramar_events.0010.d
        first_valid = {
            triggered_desc = {
                trigger = {
                    has_title = title:k_suramar
                    location.county = title:c_suramar
                }
                desc = wc_suramar_events.0010.desc_nightwell
            }
            desc = wc_suramar_events.0010.desc_ruler
        }
    }
    theme = suramar

    override_background = { reference = courtyard }

    cooldown = { years = 1 }

    trigger = {
        NOT = { has_character_flag = suramar_vaults_cleared }
        is_eligible_for_suramar_events_trigger = yes
        any_courtier = { count >= 1 }
    }

    left_portrait = {
        character = root
        animation = thinking
    }

    right_portrait = {
        character = scope:informant
        animation = stress
    }

    immediate = {
        location = {
            save_scope_as = location_scope
        }
        random_courtier = {
            save_scope_as = informant
        }
    }

    # I will investigate this!
    option = {
        name = wc_suramar_events.0010.a
        custom_tooltip = wc_suramar_events.0010.a_tt
        save_scope_as = investigator

        trigger_event = wc_suramar_events.0011

        stress_impact = {
            diligent = minor_stress_impact_loss
            brave = minor_stress_impact_loss
            craven = minor_stress_impact_gain
        }

        ai_chance = {
            base = 100
            ai_value_modifier = {
                ai_energy = 1
                ai_rationality = 1
            }
        }
    }

    # Send an knight to investigate
    option = {
        name = wc_suramar_events.0010.b
        trigger = {
            any_knight = { count >= 1 }
            short_term_gold >= minor_gold_value
        }
        ordered_knight = {
            order_by = prowess
            save_scope_as = investigator

            custom_tooltip = wc_suramar_events.0010.b_tt
        }
        pay_short_term_gold = {
            target = scope:investigator
            gold = minor_gold_value
        }
        trigger_event = wc_suramar_events.0011

        stress_impact = {
            greedy = minor_stress_impact_gain
        }

        ai_chance = {
            base = 100
            ai_value_modifier = {
                ai_greed = -1
                ai_rationality = 1
            }
        }
    }

    # Ignore it
    option = {
        name = wc_suramar_events.0010.c

        random = {
            chance = 50
            send_interface_toast = {
                title = wc_suramar_events.0010.c_bad
                type = event_toast_effect_bad
                left_icon = root
                right_icon = scope:informant
                location.county = {
                    add_county_modifier = {
                        modifier = wc_suramar_vaults_bad_modifier
                        years = 3
                    }
                }
            }
        }

        stress_impact = {
            lazy = minor_stress_impact_loss
            craven = minor_stress_impact_loss
        }

        scope:informant = {
            add_opinion = {
                modifier = disappointed_opinion
                target = root
                opinion = -15
            }
        }

        ai_chance = {
            base = 25
            modifier = {
                factor = 0
                OR = {
                    has_trait = paranoid
                    has_trait = just
                }
            }
        }
    }
}

wc_suramar_events.0011 = {
    type = character_event
    content_source = dlc_GOA
    title = wc_suramar_events.0010.t
    desc = {
        first_valid = {
            triggered_desc = {
                trigger = {
                    has_title = title:k_suramar
                    location.county = title:c_suramar
                }
                desc = wc_suramar_events.0011.desc_nightwell
            }
            desc = wc_suramar_events.0011.desc_ruler
        }
        first_valid = {
            triggered_desc = {
                trigger = {
                    var:suramar_disturbance = flag:dog
                }
                desc = wc_suramar_events.0011.desc_dog
            }
            triggered_desc = {
                trigger = {
                    var:suramar_disturbance = flag:cat
                }
                desc = wc_suramar_events.0011.desc_cat
            }
            triggered_desc = {
                trigger = {
                    var:suramar_disturbance = flag:nightfallen
                }
                desc = wc_suramar_events.0011.desc_nightfallen
            }
            triggered_desc = {
                trigger = {
                    var:suramar_disturbance = flag:monster
                }
                desc = wc_suramar_events.0011.desc_monster
            }
            triggered_desc = {
                trigger = {
                    var:suramar_disturbance = flag:bandit
                }
                desc = wc_suramar_events.0011.desc_bandit
            }
            triggered_desc = {
                trigger = {
                    var:suramar_disturbance = flag:outsider
                }
                desc = wc_suramar_events.0011.desc_outsider
            }
        }
    }
    theme = suramar

    override_background = { reference = suramar_arcway }

    left_portrait = {
        character = scope:investigator
        animation = aggressive_sword
    }

    immediate = {
        set_variable = {
            name = investigator_var
            value = scope:investigator
        }
        # Actually determine what the disturbance is
        random_list = {
            2 = {
                trigger = {
                    NOT = { has_dog_trigger = yes }
                }
                set_variable = { name = suramar_disturbance value = flag:dog }
            }
            2 = {
                trigger = {
                    NOT = { has_cat_trigger = yes }
                }
                set_variable = { name = suramar_disturbance value = flag:cat }
            }
            15 = {
                set_variable = { name = suramar_disturbance value = flag:monster }
            }
            20 = {
                trigger = {
                    OR = {
                        has_any_possible_wretched_elves_trigger = yes
                        has_any_wretched_elves_trigger = yes
                    }
                }
                set_variable = { name = suramar_disturbance value = flag:nightfallen }
            }
            20 = {
                set_variable = { name = suramar_disturbance value = flag:bandit }
            }
            10 = {
                trigger = {
                    NOT = { has_character_flag = had_outsider_event }
                }
                set_variable = { name = suramar_disturbance value = flag:outsider }
            }
        }
    }

    # Option if investigator is not you
    option = {
        name = wc_suramar_events.0011.a
        trigger = {
            NOT = { scope:investigator = root }
        }
        duel = {
            skill = prowess
            value = decent_skill_rating
            80 = {
                compare_modifier = {
                    value = scope:duel_value
                    multiplier = 3.5
                }
                save_scope_value_as = { name = suramar_investigation_result value = flag:won }
                custom_tooltip = wc_suramar_events.0011.knight_success
            }
            30 = {
                compare_modifier = {
                    value = scope:duel_value
                    multiplier = -3.5
                }
                save_scope_value_as = { name = suramar_investigation_result value = flag:lost }
                custom_tooltip = wc_suramar_events.0011.knight_failure
            }
        }
        save_scope_value_as = { name = suramar_investigation_method value = flag:knight }
        trigger_event = wc_suramar_events.0012
    }

    # Hide in the shadows
    option = {
        name = wc_suramar_events.0011.b
        trigger = {
            scope:investigator = root
        }
        duel = {
            desc = wc_suramar_events.0011.b_duel
            skill = intrigue
            value = decent_skill_rating
            70 = {
                compare_modifier = {
                    value = scope:duel_value
                    multiplier = 3.5
                }
                custom_tooltip = wc_suramar_events.0011.success
                save_scope_value_as = { name = suramar_investigation_result value = flag:won }
            }
            35 = {
                compare_modifier = {
                    value = scope:duel_value
                    multiplier = -3.5
                }
                custom_tooltip = wc_suramar_events.0011.failure
                save_scope_value_as = { name = suramar_investigation_result value = flag:lost }
            }
        }
        save_scope_value_as = { name = suramar_investigation_method value = flag:sneaky }
        trigger_event = wc_suramar_events.0012
        ai_chance = {
            base = 50
            modifier = {
                factor = 2
                highest_skill_including_prowess = intrigue
            }
            modifier = {
                factor = 1.5
                intrigue > prowess
            }
        }
    }

    # Bum rush whatever it is
    option = {
        name = wc_suramar_events.0011.c
        trigger = {
            scope:investigator = root
        }
        duel = {
            desc = wc_suramar_events.0011.c_duel
            skill = prowess
            value = decent_skill_rating
            70 = {
                compare_modifier = {
                    value = scope:duel_value
                    multiplier = 3.5
                }
                save_scope_value_as = { name = suramar_investigation_result value = flag:won }
                custom_tooltip = wc_suramar_events.0011.success
            }
            35 = {
                compare_modifier = {
                    value = scope:duel_value
                    multiplier = -3.5
                }
                custom_tooltip = wc_suramar_events.0011.failure
                save_scope_value_as = { name = suramar_investigation_result value = flag:lost }
            }
        }
        save_scope_value_as = { name = suramar_investigation_method value = flag:attack }
        trigger_event = wc_suramar_events.0012
        ai_chance = {
            base = 50
            modifier = {
                factor = 2
                highest_skill_including_prowess = prowess
            }
            modifier = {
                factor = 1.5
                prowess > intrigue
            }
        }
    }

    # Chicken out and leave
    option = {
        name = wc_suramar_events.0011.d
        custom_tooltip = wc_suramar_events.0011.d_tt
        trigger = {
            scope:investigator = root
        }
        random = {
            chance = 50
            send_interface_toast = {
                title = wc_suramar_events.0010.c_bad
                type = event_toast_effect_bad
                left_icon = root
                right_icon = scope:informant
                location.county = {
                    add_county_modifier = {
                        modifier = wc_suramar_vaults_bad_modifier
                        years = 3
                    }
                }
            }
        }

        stress_impact = {
            lazy = minor_stress_impact_loss
            craven = minor_stress_impact_loss
        }

        ai_chance = {
            base = 5
        }
    }
}

wc_suramar_events.0012 = {
    type = character_event
    content_source = dlc_GOA
    title = wc_suramar_events.0010.t
    desc = {
        # Intro, using the method
        triggered_desc = {
            trigger = {
                scope:suramar_investigation_method = flag:knight
            }
            desc = wc_suramar_events.0112.desc_knight
        }
        triggered_desc = {
            trigger = {
                scope:suramar_investigation_method = flag:sneaky
            }
            desc = wc_suramar_events.0112.desc_sneak
        }
        triggered_desc = {
            trigger = {
                scope:suramar_investigation_method = flag:attack
            }
            desc = wc_suramar_events.0112.desc_attack
        }
        first_valid = {
            triggered_desc = {
                trigger = {
                    var:suramar_disturbance = flag:dog
                }
                desc = wc_suramar_events.0112.desc_dog
            }
            triggered_desc = {
                trigger = {
                    var:suramar_disturbance = flag:cat
                }
                desc = wc_suramar_events.0112.desc_cat
            }
            triggered_desc = {
                trigger = {
                    var:suramar_disturbance = flag:nightfallen
                }
                desc = wc_suramar_events.0112.desc_nightfallen
            }
            triggered_desc = {
                trigger = {
                    var:suramar_disturbance = flag:monster
                }
                desc = wc_suramar_events.0112.desc_monster
            }
            triggered_desc = {
                trigger = {
                    var:suramar_disturbance = flag:bandit
                }
                desc = wc_suramar_events.0112.desc_bandit
            }
            triggered_desc = {
                trigger = {
                    var:suramar_disturbance = flag:outsider
                }
                desc = wc_suramar_events.0112.desc_outsider
            }
        }
        first_valid = {
            triggered_desc = {
                trigger = {
                    scope:suramar_investigation_method = flag:knight
                    scope:suramar_investigation_result = flag:won
                    NOR = {
                        var:suramar_disturbance = flag:cat
                        var:suramar_disturbance = flag:dog
                    }
                }
                desc = wc_suramar_events.0112.desc_knight_won
            }
            triggered_desc = {
                trigger = {
                    scope:suramar_investigation_method = flag:knight
                    scope:suramar_investigation_result = flag:lost
                    NOR = {
                        var:suramar_disturbance = flag:cat
                        var:suramar_disturbance = flag:dog
                    }
                }
                desc = wc_suramar_events.0112.desc_knight_lost
            }
            triggered_desc = {
                trigger = {
                    scope:suramar_investigation_result = flag:won
                    NOR = {
                        var:suramar_disturbance = flag:cat
                        var:suramar_disturbance = flag:dog
                    }
                }
                desc = wc_suramar_events.0112.desc_won
            }
            triggered_desc = {
                trigger = {
                    scope:suramar_investigation_result = flag:lost
                    NOR = {
                        var:suramar_disturbance = flag:cat
                        var:suramar_disturbance = flag:dog
                    }
                }
                desc = wc_suramar_events.0112.desc_lost
            }
        }
        triggered_desc = {
            trigger = {
                var:suramar_disturbance = flag:nightfallen
                NOT = { has_character_flag = had_nightfallen_event }
            }
            desc = wc_suramar_events.0112.desc_nightfallen_outro
        }
    }
    theme = suramar

    override_background = { reference = suramar_arcway }

    left_portrait = {
        character = scope:investigator
        triggered_animation = {
            trigger = {
                scope:suramar_investigation_result = flag:lost
                NOR = {
                    var:suramar_disturbance = flag:cat
                    var:suramar_disturbance = flag:dog
                }
            }
            animation = fear
        }
        triggered_animation = {
            trigger = {
                OR = {
                    var:suramar_disturbance = flag:cat
                    var:suramar_disturbance = flag:dog
                }
            }
            animation = admiration
        }
        animation = aggressive_sword
    }

    right_portrait = {
        trigger = { exists = scope:secondary_character }
        triggered_animation = {
            trigger = {
                scope:suramar_investigation_result = flag:won
            }
            animation = fear
        }
        character = scope:secondary_character
        animation = war_defender
    }

    immediate = {
        if = {
            limit = {
                scope:suramar_investigation_result = flag:won
            }
            add_prestige = medium_prestige_gain
        }
        switch = {
            trigger = var:suramar_disturbance
            flag:nightfallen = {
                hidden_effect = {
                    random_in_list = {
                        variable = suramar_exiled_characters
                        limit = { is_alive = yes }
                        if = {
                            limit = {
                                NOT = { has_trait = wretched }
                            }
                            add_trait = wretched
                        }
                        save_scope_as = secondary_character
                    }
                }
            }
            flag:bandit = {
                create_character = {
                    template = bandit_character
                    location = root.location
                    culture = root.location.culture
                    faith = root.location.faith
                    trait = gallowsbait
                    random_traits = yes
                    save_scope_as = secondary_character
                    after_creation = {
                        # Warcraft
                        trigger_race_giving_no_gene_effect = yes
                    }
                }
            }
            flag:outsider = {
                create_character = {
                    template = generic_peasant_character
                    location = root.location
                    faith = root.faith
                    random_culture = {
                        culture:lordaeronian = { weight = { base = 1 } }
                        culture:alteraci = { weight = { base = 1 } }
                        culture:dalaranian = { weight = { base = 1 } }
                        culture:vrykul = { weight = { base = 1 } }
                        culture:night_elf = { weight = { base = 1 } }
                        culture:high_elf = { weight = { base = 1 } }
                        culture:satyr = { weight = { base = 1 } }
                    }
                    random_traits = yes
                    save_scope_as = secondary_character
                    after_creation = {
                        # Warcraft
                        trigger_race_giving_no_gene_effect = yes
                        if = {
                            limit = {
                                OR = {
                                    culture = culture:lordaeronian
                                    culture = culture:lordaeronian
                                    culture = culture:alteraci
                                }
                            }
                            random_list = {
                                10 = { set_character_faith = faith:holy_light }
                                10 = { set_character_faith = faith:kirin_torian }
                                1 = {
                                    trigger = { exists = title:e_scourge }
                                    set_character_faith = faith:death_god set_culture = culture:scourge
                                    add_trait = being_undead
                                }
                            }
                        }
                        else_if = {
                            limit = {
                                culture = culture:vrykul
                            }
                            random_list = {
                                10 = { set_character_faith = faith:odyn }
                                1 = {
                                    trigger = { exists = title:e_scourge }
                                    set_character_faith = faith:helya set_culture = culture:kvaldir
                                    add_trait = being_undead remove_trait = creature_vrykul add_trait = creature_kvaldir
                                }
                            }
                        }
                        else_if = {
                            limit = {
                                culture = culture:night_elf
                            }
                            set_character_faith = faith:kaldorei_religion
                        }
                        else_if = {
                            limit = {
                                culture = culture:high_elf
                            }
                            set_character_faith = faith:cult_of_sunwell
                        }
                        else_if = {
                            limit = {
                                culture = culture:satyr
                            }
                            set_character_faith = faith:burning_legion_religion
                        }
                    }
                }
            }
        }
    }

    # Bandit Options #

    # Exile them (could create wretched)
    option = {
        name = wc_suramar_events.0012.bandit_1
        trigger = {
            var:suramar_disturbance = flag:bandit
            scope:suramar_investigation_result = flag:won
        }

        suramar_exile_character_effect = {
            EXILED = scope:secondary_character
        }

        stress_impact = {
            vengeful = minor_stress_impact_gain
            forgiving = minor_stress_impact_loss
        }

        ai_chance = {
            base = 50
            ai_value_modifier = {
                ai_vengefulness = -1
            }
        }
    }

    # Jail them
    option = {
        name = wc_suramar_events.0012.bandit_2
        trigger = {
            var:suramar_disturbance = flag:bandit
            scope:suramar_investigation_result = flag:won
        }

        stress_impact = {
            forgiving = minor_stress_impact_gain
            vengeful = minor_stress_impact_loss
        }

        add_dread = minor_dread_gain
        rightfully_imprison_character_less_verbose_effect = {
            TARGET = scope:secondary_character
            IMPRISONER = root
        }

        ai_chance = {
            base = 50
            ai_value_modifier = {
                ai_vengefulness = 1
            }
        }
    }

    # Monster Options #

    # Study it
    option = {
        name = wc_suramar_events.0012.monster_1
        trigger = {
            var:suramar_disturbance = flag:monster
            scope:suramar_investigation_result = flag:won
        }
        add_character_modifier = {
            modifier = wc_suramar_studying_monsters_modifier
            years = 3
        }

        ai_chance = {
            base = 50
            ai_value_modifier = {
                ai_rationality = 1
            }
        }
    }

    # Show the body as a warning
    option = {
        name = wc_suramar_events.0012.monster_2
        trigger = {
            var:suramar_disturbance = flag:monster
            scope:suramar_investigation_result = flag:won
        }
        add_dread = minor_dread_gain

        ai_chance = {
            base = 50
            ai_value_modifier = {
                ai_compassion = -1
            }
        }
    }

    # Outsider Options #

    # Offer them a place in Suramar
    option = {
        name = wc_suramar_events.0012.outsider_1
        trigger = {
            var:suramar_disturbance = flag:outsider
            scope:suramar_investigation_result = flag:won
        }
        add_courtier = scope:secondary_character

        stress_impact = {
            compassionate = minor_stress_impact_loss
            paranoid = minor_stress_impact_gain
        }

        ai_chance = {
            base = 50
            ai_value_modifier = {
                ai_compassion = 1
            }
            modifier = {
                factor = 0
                has_trait = paranoid
            }
        }
    }

    # Kill them
    option = {
        name = wc_suramar_events.0012.outsider_2
        trigger = {
            var:suramar_disturbance = flag:outsider
            scope:suramar_investigation_result = flag:won
        }
        add_dread = minor_dread_gain

        scope:secondary_character = {
            override_death_killer_effect = {
                death_reason = death_murder
                killer = root
            }
        }

        stress_impact = {
            callous = minor_stress_impact_loss
            compassionate = medium_stress_impact_gain
            paranoid = minor_stress_impact_loss
        }

        ai_chance = {
            base = 50
            ai_value_modifier = {
                ai_compassion = -1
            }
            modifier = {
                factor = 0
                has_trait = compassionate
            }
        }
    }

    # Nightfallen Options #

    # Offer them a place in Suramar
    option = {
        name = wc_suramar_events.0012.nightfallen_1
        trigger = {
            var:suramar_disturbance = flag:nightfallen
            scope:suramar_investigation_result = flag:won
            has_character_flag = had_nightfallen_event
        }

        add_courtier = scope:secondary_character

        stress_impact = {
            compassionate = minor_stress_impact_loss
            paranoid = minor_stress_impact_gain
        }

        ai_chance = {
            base = 50
            ai_value_modifier = {
                ai_compassion = 1
            }
            modifier = {
                factor = 0
                has_trait = paranoid
            }
        }
    }

    # Kill them
    option = {
        name = wc_suramar_events.0012.nightfallen_2
        trigger = {
            var:suramar_disturbance = flag:nightfallen
            scope:suramar_investigation_result = flag:won
            has_character_flag = had_nightfallen_event
        }

        add_dread = minor_dread_gain

        scope:secondary_character = {
            override_death_killer_effect = {
                death_reason = death_murder
                killer = root
            }
        }

        stress_impact = {
            callous = minor_stress_impact_loss
            compassionate = medium_stress_impact_gain
            paranoid = minor_stress_impact_loss
        }

        ai_chance = {
            base = 50
            ai_value_modifier = {
                ai_compassion = -1
            }
            modifier = {
                factor = 0
                has_trait = compassionate
            }
        }
    }

    # Get the nightfallen event
    option = {
        name = wc_suramar_events.0012.nightfallen_3
        trigger = {
            var:suramar_disturbance = flag:nightfallen
            NOT = { has_character_flag = had_nightfallen_event }
        }
        suramar_discover_nightfallen_effect = yes
    }

    # Pet Options #

    # Adopt it
    option = {
        name = wc_suramar_events.0012.pet_1
        trigger = {
            OR = {
                var:suramar_disturbance = flag:cat
                var:suramar_disturbance = flag:dog
            }
        }
        if = {
            limit = {
                var:suramar_disturbance = flag:dog
            }
            start_dog_story_cycle_effect = yes
        }
        else_if = {
            limit = {
                var:suramar_disturbance = flag:cat
            }
            start_cat_story_cycle_effect = yes
        }
    }

    # Let it be
    option = {
        name = wc_suramar_events.0012.pet_2
        trigger = {
            OR = {
                var:suramar_disturbance = flag:cat
                var:suramar_disturbance = flag:dog
            }
        }
        add_stress = minor_stress_loss
    }

    # Lost Options #
    option = {
        name = wc_suramar_events.0012.lost
        trigger = {
            scope:suramar_investigation_result = flag:lost
        }
        if = {
            limit = {
                OR = {
                    var:suramar_disturbance = flag:monster
                    var:suramar_disturbance = flag:bandit
                }
            }
            random = {
                chance = 20
                increase_wounds_effect = { REASON = fight }
            }
        }
    }

    after = {
        if = {
            limit = {
                var:suramar_disturbance = flag:outsider
                NOT = { has_character_flag = had_outsider_event }
            }
            suramar_discover_outside_world_effect = yes
        }
        if = {
            limit = {
                scope:suramar_investigation_result = flag:won
                NOR = {
                    var:suramar_disturbance = flag:dog
                    var:suramar_disturbance = flag:cat
                }
            }
            add_character_flag = {
                flag = suramar_vaults_cleared
                years = 10
            }
        }
        else = {
            custom_tooltip = wc_suramar_events.0012.lost_tt
        }
    }
}

wc_suramar_events.0020 = {
    type = character_event
    content_source = dlc_GOA
    title = wc_suramar_events.0020.t
    desc = wc_suramar_events.0020.d
    theme = suramar

    cooldown = { years = 10 }

    trigger = {
        is_eligible_for_suramar_events_trigger = yes
    }

    left_portrait = {
        character = root
        animation = thinking
    }

    option = {
        name = wc_suramar_events.0020.a
        add_character_modifier = {
            modifier = wc_suramar_beauty_queen_modifier
            years = 3
        }
    }

    option = {
        name = wc_suramar_events.0020.b
        add_character_modifier = {
            modifier = wc_suramar_cunning_queen_modifier
            years = 3
        }
    }
}

wc_suramar_events.0030 = {
    type = character_event
    content_source = dlc_GOA
    title = wc_suramar_events.0030.t
    desc = wc_suramar_events.0030.desc
    theme = faith

    cooldown = { years = 10 }

    immediate = {
        create_character = {
            dynasty = none
            template = priest_character_template
            gender_female_chance = 75
            location = root.location
            faith = faith:kaldorei_religion
            save_scope_as = priestess
            after_creation = {
                trigger_race_giving_no_gene_effect = yes
                learn_language = language_darnassian
            }
        }
    }

    trigger = {
        is_eligible_for_suramar_events_trigger = yes
    }

    left_portrait = {
        character = root
        triggered_animation = {
            trigger = {
                faith = faith:kaldorei_religion
                NOT = { has_trait = cynical }
            }
            animation = personality_zealous
        }
        triggered_animation = {
            trigger = {
                has_trait = cynical
            }
            animation = personality_cynical
        }
        triggered_animation = {
            trigger = {
                NOT = { faith = faith:kaldorei_religion }
                has_trait = zealous
            }
            animation = dismissal
        }
        animation = personality_rational
    }

    right_portrait = {
        character = scope:priestess
        animation = prayer
        camera = camera_event_horse_right
    }

    # Pray with the priest
    option = {
        name = wc_suramar_events.0030.a

        if = {
            limit = {
                has_character_modifier = wc_suramar_persecuting_elunists_modifier
            }
            remove_character_modifier = wc_suramar_persecuting_elunists_modifier
        }

        custom_tooltip = {
            text = wc_suramar_events.0030.a_tt
            every_vassal_or_below = {
                limit = {
                    faith = faith:kaldorei_religion
                }
                add_opinion = {
                    modifier = respect_opinion
                    target = root
                    opinion = 20
                }
            }
            every_courtier = {
                limit = {
                    faith = faith:kaldorei_religion
                }
                add_opinion = {
                    modifier = pleased_opinion
                    target = root
                    opinion = 20
                }
            }
        }

        if = {
            limit = {
                faith = faith:kaldorei_religion
            }
            add_piety = medium_piety_gain
            stress_impact = {
                zealous = medium_stress_impact_loss
                cynical = minor_stress_impact_gain
            }
        }
        else = {
            add_character_modifier = {
                modifier = wc_suramar_elunic_influence_modifier
                years = 5
            }
            stress_impact = {
                cynical = minor_stress_impact_loss
            }
        }

        scope:priestess = {
            add_opinion = {
                modifier = pleased_opinion
                target = root
                opinion = 20
            }
        }

        ai_chance = {
            base = 50
            ai_value_modifier = {
                ai_zeal = -1
            }
            modifier = {
                add = 25
                OR = {
                    faith = {
                        faith_hostility_level = {
                            target = faith:kaldorei_religion
                            value = faith_fully_accepted_level
                        }
                    }
                    faith = faith:kaldorei_religion
                }
            }
            modifier = {
                add = 10
                faith = {
                    faith_hostility_level = {
                        target = faith:kaldorei_religion
                        value = faith_astray_level
                    }
                }
            }
            modifier = {
                add = -10
                faith = {
                    faith_hostility_level = {
                        target = faith:kaldorei_religion
                        value = faith_hostile_level
                    }
                }
            }
            modifier = {
                add = -25
                faith = {
                    faith_hostility_level = {
                        target = faith:kaldorei_religion
                        value = faith_evil_level
                    }
                }
            }
        }
    }

    # No but cool
    option = {
        name = wc_suramar_events.0030.b

        if = {
            limit = {
                faith = faith:kaldorei_religion
            }
            add_piety = minor_piety_loss
            stress_impact = {
                zealous = medium_stress_impact_gain
            }
        }

        scope:priestess = {
            add_opinion = {
                modifier = disappointed_opinion
                target = root
                opinion = -10
            }
        }

        ai_chance = {
            base = 50
            modifier = {
                factor = 0
                has_trait = zealous
                faith = faith:kaldorei_religion
            }
            modifier = {
                add = 25
                has_trait = cynical
            }
        }
    }

    # Fuck elune # FOR REAL
    option = {
        name = wc_suramar_events.0030.c
        trigger = {
            NOT = { faith = faith:kaldorei_religion }
            OR = {
                has_character_modifier = wc_suramar_persecuting_elunists_modifier
                is_elisande_trigger = yes
                has_trait = irritable
                has_trait_malicious_trigger = yes
            }
        }

        if = {
            limit = {
                NOT = { has_character_modifier = wc_suramar_persecuting_elunists_modifier }
            }
            rightfully_imprison_character_less_verbose_effect = {
                TARGET = scope:priestess
                IMPRISONER = root
            }
            add_character_modifier = {
                modifier = wc_suramar_persecuting_elunists_modifier
                years = 3
            }
        }
        else = {
            suramar_exile_character_effect = {
                EXILED = scope:secondary_character
            }
        }

        stress_impact = {
            compassionate = major_stress_impact_gain
            sadistic = medium_stress_impact_loss
            callous = minor_stress_impact_loss
            cynical = miniscule_stress_impact_loss
        }

        ai_chance = {
            base = 75
            ai_value_modifier = {
                ai_compassion = -1
            }
        }
    }


    option = {
        name = wc_suramar_events.0030.d
        trigger = {
            NOT = { knows_language = language_darnassian }
            learning >= high_skill_rating
        }
        show_as_unavailable = { always = yes }

        learn_language = language_darnassian

        ai_chance = {
            base = 50
        }
    }
}

wc_suramar_events.0040 = {
    type = character_event
    content_source = dlc_GOA
    title = wc_suramar_events.0040.t
    desc = {
        desc = wc_suramar_events.0040.desc
        triggered_desc = {
            trigger = {
                has_character_flag = had_pre_faldorei_event
            }
            desc = wc_suramar_events.0040.desc_repeat
        }
    }
    theme = suramar

    override_background = { reference = study }

    left_portrait = {
        character = root
        animation = thinking
    }

    right_portrait = {
        character = scope:informant
        animation = storyteller
    }

    cooldown = { years = 2 }

    immediate = {
        if = {
            limit = {
                exists = cp:councillor_spymaster
            }
            cp:councillor_spymaster = {
                save_scope_as = informant
            }
        }
        else = {
            title:c_meredil.holder = {
                save_scope_as = informant
            }
        }
    }

    trigger = {
        NOR = { 
            has_trait = wretched
            has_trait = creature_faldorei
            has_character_flag = had_faldorei_event
        }
        is_eligible_for_suramar_events_trigger = yes
        OR = {
            exists = cp:councillor_spymaster
            NOT = { title:c_meredil.holder = root }
        }
    }

    option = {
        name = {
            text = {
                first_valid = {
                    triggered_desc = {
                        trigger = {
                            has_character_flag = had_pre_faldorei_event
                        }
                        desc = wc_suramar_events.0040.a_repeat
                    }
                    desc = wc_suramar_events.0040.a
                }

            }
        }

        start_travel_plan = {
            destination = title:b_meredil.title_province
            companion = scope:informant
            on_arrival_event = wc_suramar_events.0041
        }

        stress_impact = {
            brave = minor_stress_impact_gain
        }

        ai_chance = {
            base = 75
        }
    }

    option = {
        name = wc_suramar_events.0040.b
        trigger = {
            short_term_gold >= minor_gold_value
            any_knight = { is_available_ai_adult = yes NOT = { this = scope:informant }}
        }
        show_as_unavailable = { always = yes }

        remove_short_term_gold = minor_gold_value

        ordered_knight = {
            limit = {
                is_available_ai_adult = yes
                NOT = { this = scope:informant }
            }
            order_by = prowess
            save_scope_as = faldorei_guard
        }

        stress_impact = {
            greedy = minor_stress_impact_gain
            craven = minor_stress_impact_loss
        }

        start_travel_plan = {
            destination = title:b_meredil.title_province
            companion = scope:informant
            on_arrival_event = wc_suramar_events.0041
        }

        current_travel_plan = {
            add_companion = scope:faldorei_guard
        }

        ai_chance = {
            base = 50
            ai_value_modifier = {
                ai_greed = -1
            }
            modifier = {
                add = 25
                has_trait = craven
            }
            modifier = {
                add = -25
                OR = {
                    has_trait = brave
                    has_trait = arrogant
                }
            }
        }
    }

    option = {
        name = wc_suramar_events.0040.c
        trigger = { NOT = { has_character_flag = had_pre_faldorei_event } }

        add_character_flag = had_pre_faldorei_event

        scope:informant = {
            add_opinion = {
                modifier = disappointed_opinion
                target = root
                opinion = -10
            }
        }

        stress_impact = {
            brave = minor_stress_impact_loss
        }

        ai_chance = {
            base = 75
        }
    }
}

wc_suramar_events.0041 = {
    type = character_event
    content_source = dlc_GOA
    title = wc_suramar_events.0040.t
    desc = {
        desc = wc_suramar_events.0041.desc
        triggered_desc = {
            trigger = {
                exists = scope:faldorei_guard
            }
            desc = wc_suramar_events.0041.desc_guards
        }
    }
    theme = suramar

    override_effect_2d = {
        reference = fog
    }

    override_background = { reference = terrain }

    immediate = {
        add_character_flag = had_faldorei_event
    }

    left_portrait = {
        character = root
        animation = worry
    }
    right_portrait = {
        trigger = { exists = scope:faldorei_guard }
        character = scope:faldorei_guard
        animation = personality_honorable
    }

    option = {
        name = wc_suramar_events.0041.a
        custom_tooltip = wc_suramar_events.0041.a_tt

        hidden_effect = {
            random_list = {
                50 = { # Find artifact
                    trigger_event = {
                        id = wc_suramar_events.0042
                        days = { 1 8 }
                    }
                }
                50 = {
                    trigger_event = {
                        id = wc_suramar_events.0043
                        days = { 1 8 }
                    }
                }
            }
        }

        current_travel_plan = {
            delay_travel_plan = { days = 10 }
        }
    }

    option = {
        name = wc_suramar_events.0041.b
        trigger = {
            NOT = { exists = scope:faldorei_guard }
        }

        trigger_event = {
            id = wc_suramar_events.0043
            days = { 1 8 }
        }

        current_travel_plan = {
            delay_travel_plan = { days = 20 }
        }
    }

    option = {
        name = wc_suramar_events.0041.c
        trigger = {
            exists = scope:faldorei_guard
        }

        hidden_effect = {
            random_list = {
                75 = { # Find artifact
                    trigger_event = {
                        id = wc_suramar_events.0042
                        days = { 1 8 }
                    }
                }
                25 = {
                    trigger_event = {
                        id = wc_suramar_events.0043
                        days = { 1 8 }
                    }
                }
            }
        }

        current_travel_plan = {
            delay_travel_plan = { days = 5 }
        }
    }
}

# You find a relic
wc_suramar_events.0042 = {
    type = character_event
    content_source = dlc_GOA
    title = wc_suramar_events.0040.t
    desc = wc_suramar_events.0042.desc
    theme = suramar
    override_background = { reference = terrain }

    immediate = {
        random_list = {
            50 = {
                generate_trinket_effect = {
                    TRINKET_RECEIVER = root
                    TRINKET_GIVER = root
                    GRAB_ALL_TRINKETS = yes
                    HISTORY_TYPE = discovered
                }
                scope:new_trinket = { save_scope_as = newly_created_artifact }
            }
            75 = {
                modifier = {
                    add = 25
                    is_ai = no
                }
                modifier = {
                    add = 25
                    exists = scope:faldorei_guard
                }
                trigger = {
                    NOT = {
                        any_artifact = {
                            has_variable = arcandor_seed
                        }
                    }
                }
                create_artifact_arcandor_seed_effect = { OWNER = root }
            }
        }
    }

    artifact = {
        target = scope:newly_created_artifact
        position = lower_left_portrait
        trigger = { exists = scope:newly_created_artifact }
    }

    left_portrait = {
        character = root
        animation = admiration
    }

    option = {
        name = wc_suramar_events.0042.a
        trigger_event = {
            id = wc_suramar_events.0043
            days = { 1 3 }
        }
        current_travel_plan = {
            delay_travel_plan = { days = 5 }
        }
    }
}

wc_suramar_events.0043 = {
    type = character_event
    content_source = dlc_GOA
    title = wc_suramar_events.0040.t
    desc = wc_suramar_events.0043.desc
    theme = suramar

    override_background = { reference = terrain }

    immediate = {
        create_character = {
            dynasty = none
            gender_female_chance = 50
            location = root.location
            age = { 18 35 }
            random_traits_list = {
                count = 1
                education_martial_2 = {}
                education_martial_3 = {}
                education_martial_4 = {}
            }
            random_traits = yes
            culture = culture:faldorei
            faith = faith:moonweaver_religion
            martial = {
                min_template_decent_skill
                max_template_decent_skill
            }
            prowess = {
                min_template_decent_skill
                min_template_decent_skill
            }
            save_scope_as = attacker
            after_creation = {
                # Warcraft
                trigger_race_giving_no_gene_effect = yes
            }
        }
    }

    left_portrait = {
        character = scope:informant
        animation = fear
    }

    right_portrait = {
        character = scope:attacker
        animation = aggressive_axe
    }

    # Attack the beast
    option = {
        name = wc_suramar_events.0043.a

        duel = {
            skills = { prowess martial }
            target = scope:attacker
            80 = {
                compare_modifier = {
                    value = scope:duel_value
                    multiplier = 3.5
                }
                desc = wc_suramar_events.0043.success
                save_scope_value_as = { name = falanaar_duel value = flag:won }
                scope:attacker = { override_death_killer_effect = { death_reason = death_duel killer = root } }
                scope:informant = {
                    add_opinion = {
                        target = root
                        modifier = saved_my_life_opinion
                        opinion = 40
                    }
                }
                add_hook = {
                    target = scope:informant
                    type = saved_my_life_hook
                }
            }
            30 = {
                compare_modifier = {
                    value = scope:duel_value
                    multiplier = -3.5
                }
                desc = wc_suramar_events.0043.failure
                save_scope_value_as = { name = falanaar_duel value = flag:lost }
                random = {
                    chance = 20
                    increase_wounds_effect = { REASON = duel }
                }
                scope:informant = {
                    random_list = {
                        20 = {
                            increase_wounds_effect = { REASON = duel }
                        }
                        5 = {
                            override_death_killer_effect = { death_reason = death_duel killer = scope:attacker }
                        }
                    }
                }
            }
        }

        stress_impact = {
            brave = minor_stress_impact_loss
            craven = minor_stress_impact_gain
        }

        ai_chance = {
            base = 50
            ai_value_modifier = {
                ai_energy = 1
            }
            modifier = {
                factor = 2
                OR = {
                    highest_skill_including_prowess = martial
                    highest_skill_including_prowess = prowess
                }
            }
            modifier = {
                factor = 0
                has_trait = craven
            }
            opinion_modifier = {
                opinion_target = scope:informant
                multiplier = 1
            }
        }
    }

    # Try and calm the beast
    option = {
        name = wc_suramar_events.0043.b
        trigger = {
            OR = {
                learning >= high_skill_rating
                intrigue >= high_skill_rating
            }
        }
        show_as_unavailable = { always = yes }

        duel = {
            skills = { intrigue learning }
            target = scope:attacker
            30 = {
                compare_modifier = {
                    value = scope:duel_value
                    multiplier = 3.5
                }
                desc = wc_suramar_events.0043.success
                save_scope_value_as = { name = falanaar_duel value = flag:won }
                scope:informant = {
                    add_opinion = {
                        target = root
                        modifier = saved_my_life_opinion
                        opinion = 40
                    }
                }
                add_hook = {
                    target = scope:informant
                    type = saved_my_life_hook
                }
            }
           60 = {
                compare_modifier = {
                    value = scope:duel_value
                    multiplier = -3.5
                }
                desc = wc_suramar_events.0043.failure
                save_scope_value_as = { name = falanaar_duel value = flag:lost }
                random = {
                    chance = 20
                    increase_wounds_effect = { REASON = duel }
                }
                scope:informant = {
                    random_list = {
                        20 = {
                            increase_wounds_effect = { REASON = duel }
                        }
                        5 = {
                            override_death_killer_effect = { death_reason = death_duel killer = scope:attacker }
                        }
                    }
                }
            }
        }

        stress_impact = {
            brave = minor_stress_impact_loss
            craven = minor_stress_impact_gain
        }

        ai_chance = {
            base = 50
            ai_value_modifier = {
                ai_energy = 1
            }
            modifier = {
                factor = 2
                OR = {
                    highest_skill_including_prowess = learning
                    highest_skill_including_prowess = intrigue
                }
            }
            modifier = {
                factor = 0
                has_trait = craven
            }
            opinion_modifier = {
                opinion_target = scope:informant
                multiplier = 1
            }
        }
    }

    # Send your guard
    option = {
        name = wc_suramar_events.0043.c
        trigger = {
            exists = scope:faldorei_guard
        }
        scope:faldorei_guard = {
            duel = {
                skills = { martial prowess }
                target = scope:attacker
                40 = {
                    compare_modifier = {
                        value = scope:duel_value
                        multiplier = 3.5
                    }
                    desc = wc_suramar_events.0043.success
                    root = { save_scope_value_as = { name = falanaar_duel value = flag:won } }
                    scope:attacker = { override_death_killer_effect = { death_reason = death_duel killer = scope:faldorei_guard } }
                    scope:informant = {
                        add_opinion = {
                            target = root
                            modifier = grateful_opinion
                            opinion = 40
                        }
                        add_opinion = {
                            target = scope:faldorei_guard
                            modifier = saved_my_life_opinion
                            opinion = 40
                        }
                    }
                    add_hook = {
                        target = scope:informant
                        type = saved_my_life_hook
                    }
                }
                50 = {
                    compare_modifier = {
                        value = scope:duel_value
                        multiplier = -3.5
                    }
                    desc = wc_suramar_events.0043.failure
                    root = { save_scope_value_as = { name = falanaar_duel value = flag:lost } }
                    random = {
                        chance = 20
                        increase_wounds_effect = { REASON = duel }
                    }
                    random = {
                        chance = 5
                        override_death_killer_effect = { death_reason = death_duel killer = scope:attacker }
                    }
                    scope:informant = {
                        random_list = {
                            70 = {}
                            20 = {
                                increase_wounds_effect = { REASON = duel }
                            }
                            5 = {
                                override_death_killer_effect = { death_reason = death_duel killer = scope:attacker }
                            }
                        }
                    }
                }
            }
        }

        stress_impact = {
            compassionate = minor_stress_impact_loss
        }

        ai_chance = {
            base = 100
            ai_value_modifier = {
                ai_energy = 1
            }
            opinion_modifier = {
                opinion_target = scope:informant
                multiplier = 1
            }
        }
    }

    # Leave them to die
    option = {
        name = wc_suramar_events.0043.d

        save_scope_value_as = { name = falanaar_duel value = flag:left }

        scope:informant = {
            add_opinion = {
                modifier = angry_opinion
                target = root
                opinion = -30
            }
            random = {
                chance = 50
                increase_wounds_effect = { REASON = duel }
            }
            random = {
                chance = 10
                override_death_killer_effect = { death_reason = death_duel killer = scope:attacker }
            }
        }

        stress_impact = {
            callous = medium_stress_impact_loss
            compassionate = major_stress_impact_gain
            sadistic = medium_stress_impact_loss
        }

        if = {
            limit =  {
                exists = scope:faldorei_guard
            }
            scope:faldorei_guard = {
                add_opinion = {
                    target = root
                    modifier = disappointed_opinion
                    opinion = -15
                }
            }
        }

        ai_chance = {
            base = 10
            ai_value_modifier = {
                ai_compassion = -1
            }
            opinion_modifier = {
                opinion_target = scope:informant
                multiplier = -1
            }
        }
    }

    after = {
        trigger_event = {
            id = wc_suramar_events.0044
        }
        current_travel_plan = {
            delay_travel_plan = { days = 5 }
        }
    }
}
wc_suramar_events.0044 = {
    type = character_event
    content_source = dlc_GOA
    title = wc_suramar_events.0040.t
    desc = {
        # Duel outcome
        first_valid = {
            triggered_desc = {
                trigger = {
                    scope:falanaar_duel = flag:lost
                }
                desc = wc_suramar_events.0044.desc_lost
            }
            triggered_desc = {
                trigger = {
                    scope:falanaar_duel = flag:won
                }
                desc = wc_suramar_events.0044.desc_won
            }
            triggered_desc = {
                trigger = {
                    scope:falanaar_duel = flag:left
                }
                desc = wc_suramar_events.0044.desc_left
            }
        }
        desc = wc_suramar_events.0044.desc
        triggered_desc = {
            trigger = {
                scope:informant = { is_alive = no }
            }
            desc = wc_suramar_events.0044.desc_died
        }
        triggered_desc = {
            trigger = {
                scope:attacker = { is_alive = no }
            }
            desc = wc_suramar_events.0044.desc_died_attacker
        }
        first_valid = {
            triggered_desc = {
                trigger = {
                    scope:informant = { is_alive = yes }
                }
                desc = wc_suramar_events.0044.desc_outro
            }
            triggered_desc = {
                trigger = {
                    scope:informant = { is_alive = no }
                }
                desc = wc_suramar_events.0044.desc_outro_solo
            }
        }
        first_valid = {
            triggered_desc = {
                trigger = {
                    has_arcandor_seed_trigger = yes 
                    scope:informant = { is_alive = yes }
                }
                desc = wc_suramar_events.0044.desc_seed
            }
            triggered_desc = {
                trigger = {
                    has_arcandor_seed_trigger = yes 
                    scope:informant = { is_alive = no }
                }
                desc = wc_suramar_events.0044.desc_seed_solo
            }
        }
    }
    theme = suramar

    override_background = { reference = dungeon }

    left_portrait = {
        character = root 
        animation = worry
    }

    right_portrait = {
        character = scope:informant
        animation = stress
    }

    lower_right_portrait = {
        character = scope:attacker
    }

    immediate = {
        if = {
            limit = {
                scope:informant = is_alive = no
                NOT = { scope:falanaar_duel = flag:left }
            }
            stress_impact = {
                base = medium_stress_impact_gain
                sadistic = minor_stress_impact_loss
                callous = minor_stress_impact_loss
            }
        }
    }

    # Ok, time to go home
    option = {
        name = wc_suramar_events.0044.a
        trigger = {
            has_arcandor_seed_trigger = yes 
        }
        flavor = wc_suramar_events.0044.a_tt
        add_prestige = minor_prestige_gain

        ai_chance = {
            base = 100
        }
    }

    # Look for something
    option = {
        name = wc_suramar_events.0044.b

        random_list = {
            desc = wc_suramar_events.0044.b_tt
            50 = {
                send_interface_toast = {
                    type = event_toast_effect_good
                    left_icon = root
                    title = wc_suramar_events.0044.b_success
                    add_character_modifier = {
                        modifier = wc_suramar_mana_crystals_modifier
                        years = 2
                    }
                }
            }
            50 = {
                send_interface_toast = {
                    type = event_toast_effect_bad
                    left_icon = root
                    title = wc_suramar_events.0044.b_fail
                    add_stress = minor_stress_gain
                    random = {
                        chance = 25
                        increase_wounds_effect = { REASON = fire }
                    }
                }
                
            }
        }
        ai_chance = {
            base = 50
        }
    }

    # Take the corpse back for research
    option = {
        name = wc_suramar_events.0044.c
        trigger = {
            OR = {
                scope:informant = { is_alive = no }
                scope:attacker = { is_alive = no }
            }
            OR = {
				has_trait = gluttonous
				has_trait = lunatic
				has_trait = possessed
                has_trait = sadistic
                has_trait = callous
                any_secret = { secret_type = secret_cannibal }
				has_trait = cannibal
			}
        }

        if = {
            limit = {
                scope:informant = { is_alive = no }
            }
            scope:informant = { save_scope_as = corpse }
        }
        else = {
            scope:attacker = { save_scope_as = corpse }
        }

        custom_tooltip = wc_suramar_events.0044.c_tt

        give_cannibal_secret_or_trait_effect = yes
		add_character_modifier = {
			modifier = ate_good_meal
			days = 365
		}

        stress_impact = {
			base = medium_stress_impact_loss
			gluttonous = minor_stress_impact_loss
			compassionate = major_stress_impact_gain
            just = minor_stress_impact_gain
            sadistic = minor_stress_impact_loss
            callous = minor_stress_impact_loss
		}

        ai_chance = {
            base = 5
        }
    }

    after = {
        if = {
            limit = {
                can_restore_arcandor_trigger = no
            }
            custom_tooltip = suramar_discover_nightfallen_effect_tt
        }
    }
}