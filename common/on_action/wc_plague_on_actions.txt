# PLAGUE ON ACTIONS
## PLAGUE ON ACTIONS
# plague_setup: final outcome event
plague_setup = {
	# Occurs when you execute the murder scheme. Pick out the murder method set in murder_ongoing.0001.
	first_valid = {
		plague_outcome.1001 #Zombie outbreak
	}
}

# plague_succeeded: when the plague succeds this outcome is called
plague_succeeded = {
	# Picks out the correct success event depending on setup.
	first_valid = {
		plague_outcome.2000 #Undead outbreak
	}
}

# plague_failed: when the plague fails this outcome is called
plague_failed = {
	# Picks out the correct failure event depending on setup/save.
	first_valid = {
		plague_outcome.4001
	}
}

# plague_ongoing: method that calls events every month or so
plague_ongoing = {
	# Events that can happen while planning to murder someone.
	trigger = {
		exists = scope:scheme
	}
	
	random_events = {
		chance_to_happen = 10
		200 = 0
		################
		## Specific Scheme events#
		################
		500 = plague_ongoing.3302			# Recruit cultists
		
		################
		## Generic Intrigue Scheme events#
		################
		##Agents:
		200 = intrigue_scheme_ongoing.1001 	# Pay gold for Scheme Progress
		100 = intrigue_scheme_ongoing.1002 	# Zealous agent promotes your agenda
		100 = intrigue_scheme_ongoing.1004 	# A Gregarious agent is a little too loose-lipped
		100 = intrigue_scheme_ongoing.1006 	# A Lazy agent is a little careless
		30 = intrigue_scheme_ongoing.1007 	# Caring agent wants you to stop
		50 = intrigue_scheme_ongoing.1008 	# Agent close to being discovered
		50 = intrigue_scheme_ongoing.1009 	# Close relation is willing to join your scheme after all
		50 = intrigue_scheme_ongoing.2003 	# Discover a secret about someone else than your target
		
		##Target:
		100 = intrigue_scheme_ongoing.2001 	# Trusting target
		100 = intrigue_scheme_ongoing.2002 	# Drunkard target
		##Owner:
		50 = intrigue_scheme_ongoing.3001 	# Being Just Causes Stress
		50 = intrigue_scheme_ongoing.3002 	# Being Compassionate Causes Pain
		##Child target:
		100 = intrigue_scheme_ongoing.3003 	# Mapping the local surroundings
		
		#############
		# Lifestyle events
		#############
		100 = intrigue_scheme_lifestyle.1001 	# Opportunity for a general to set up a soldier spy ring
		50 = intrigue_scheme_lifestyle.1002 	# Your soldier spy ring has been compromised!
		100 = intrigue_scheme_lifestyle.3001 	# Study the targets habits
		100 = intrigue_scheme_lifestyle.3101 	# Convert informants in target´s court
		50 = intrigue_scheme_lifestyle.3102 	# Informants are revealed!
		100 = intrigue_scheme_lifestyle.3201 	# Intercept communication
		100 = intrigue_scheme_lifestyle.3301 	# Possible to gain hook - ends the scheme
		100 = intrigue_scheme_lifestyle.3401 	# Convince courtier at target's court to inform on them
	}
}

on_province_infected_by_undead = {
	effect = {
		if = {
			limit = { # Don't repeat if it's already done
				NAND = {
					faith = scope:epidemic.var:plaguer.faith
					culture = scope:epidemic.var:plaguer.culture
				}
			}
			trigger_event = { # Repeat
				on_action = on_province_infected_by_undead
				months = 1
			}

			# If you have enough infection, your province turn undead
			set_variable = { 
				name = total_provinces
				value = 0
			}
			set_variable = {
				name = infected_provinces
				value = 0
			}
			
			every_county_province = {
				county = {
					change_variable = { name = total_provinces add = 1 }
				}
            
				if = {
					limit = {
						any_province_epidemic = { this = scope:epidemic }
						province_infection_rate = {
							epidemic = scope:epidemic
							value >= 65
						}
					}
					county = {
						change_variable = { name = infected_provinces add = 1 }
					}
				}
			}
			if = {
				limit = { infected_provinces_factor_value >= 0.5 }
				set_county_faith = scope:epidemic.var:plaguer.faith
				set_county_culture = scope:epidemic.var:plaguer.culture
				remove_variable = active_infection_check
				remove_variable = total_provinces
				remove_variable = infected_provinces
			}
		}
	}
}

ongoing_scourge_plague_coming_events = {
	random_events = {
		delay = { days = { 4 8 } } #to avoid them always firing the same day

		100 = wc_scourge_plague.0001
		#100 = wc_scourge_plague.0002
		#100 = wc_scourge_plague.0003
		#100 = wc_scourge_plague.0004
		#100 = wc_scourge_plague.0005
		#100 = wc_scourge_plague.0006
		#100 = wc_scourge_plague.0007
		#100 = wc_scourge_plague.0008
	}
}

ongoing_scourge_plague_events = {
	random_events = {
		delay = { days = { 4 8 } } #to avoid them always firing the same day

		100 = wc_scourge_plague.1004 #Priests of Quel'thalas at your court
		5 = wc_scourge_plague.1005 #You get clawed and you get the plague
	}
}