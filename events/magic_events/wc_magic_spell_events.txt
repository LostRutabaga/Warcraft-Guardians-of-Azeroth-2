namespace = wc_magic_spell_events

########## 0001 - 0999 Order Magic Events
########## 1000 - 1999 Light Magic Events
### 1000 - 1100 Salvation Events
########### 2000 - 2999 Shadow Magic Events
### 2000 - 2100 Void Leader Events
### 2200 - 2300 Voidborne Events 
########### 3000 - 3999 Death Magic Events
########### 4000 - 4999 Life Magic Events
########### 5000 - 5999 Fel Magic Events
########### 6000 - 8999 Elemental Magic Events
########### 9000 - 9999 Random Magic Events
### 9000 - Remove Incapable Event

# Add Ice Block
wc_magic_spell_events.0001 = {
    title = wc_magic_spell_events.0001.title
    desc = wc_magic_spell_events.0001.desc
    theme = order

    left_portrait = {
        character = root
    }

    right_portrait = {
        character = scope:ice_caster
        animation = disapproval
    }

    immediate = {
        remove_character_modifier = wc_frost_armor_modifier
        add_trait = ice_block
    }

    option = {
        name = wc_magic_spell_events.0001.a

        trigger_event = {
            id = wc_magic_spell_events.0002
            months = 6
        }
    }
}

# Remove Ice Block
wc_magic_spell_events.0002 = {
    hidden = yes
    immediate = {
        remove_trait = ice_block
    }
}

# Remove Polymorph
wc_magic_spell_events.0100 = {
    hidden = yes
    immediate = {
        remove_trait = polymorph
        add_prowess_skill = {
            value = scope:polymorph_prowess
            multiply = -1
        }
    }
}

# Conjure Refreshment Events
wc_magic_spell_events.0200 = {
    type = character_event
    title = wc_magic_spell_events.0200.title
    desc = wc_magic_spell_events.0200.desc
    theme = order

    left_portrait = {
        character = root
        animation = toast
    }

    option = {
        name = wc_magic_spell_events.0200.a

        custom_tooltip = wc_magic_spell_events.0200.a.tt
        set_variable = {
            name = selected_refreshment
            value = flag:food
        }
    }

    option = {
        name = wc_magic_spell_events.0200.b

        custom_tooltip = wc_magic_spell_events.0200.b.tt
        set_variable = {
            name = selected_refreshment
            value = flag:drink
        }
    }
}

wc_magic_spell_events.0300 = {
    type = activity_event
    title = wc_magic_spell_events.0300.title
    desc = wc_magic_spell_events.0300.desc
    theme = feast_activity
    override_icon = {
        reference = "gfx/interface/icons/icon_order_magic.dds"
    }

    left_portrait = {
        character = root
        animation = toast_goblet
    }

    immediate = {
        remove_character_modifier = wc_conjure_feast_modifier
        if = {
            limit = {
                has_variable = conjure_feast_duration
            }
            var:conjure_feast_duration = {
                save_scope_as = duration
            }
            remove_variable = conjure_feast_duration
        }
        else = {
            save_scope_value_as = {
                name = duration
                value = wc_spell_conjure_refreshment_duration_days_value
            }
        }
        scope:activity = {
            set_variable = {
                name = duration
                value = scope:duration
            }
        }
    }

    option = {
        name = wc_magic_spell_events.0300.a

        custom_tooltip = wc_magic_spell_events.0300.a.tt
        scope:activity = {
            set_variable = {
                name = selected_refreshment
                value = flag:food
            }
            hidden_effect = {
                every_attending_character = {
                    add_character_modifier = {
                        modifier = wc_conjure_food_modifier
                        days = wc_current_spell_duration
                    }
                }
            }
        }
    }

    option = {
        name = wc_magic_spell_events.0300.b

        custom_tooltip = wc_magic_spell_events.0300.b.tt
        scope:activity = {
            set_variable = {
                name = selected_refreshment
                value = flag:drink
            }
            hidden_effect = {
                every_attending_character = {
                    add_character_modifier = {
                        modifier = wc_conjure_drink_modifier
                        days = wc_current_spell_duration
                    }
                }
            }
        }
    }

    after = {
        trigger_event = feast.7002
    }
}

# Chronomancy Event
wc_magic_spell_events.0400 = {
    hidden = yes

    trigger = {
        has_character_flag = chronomancy_active
        OR = {
            has_variable_list = chronomancy_trait_list
            has_variable_list = chronomancy_modifier_list
        }
    }

    immediate = {
        save_scope_as = chronomancer
        every_character_trait = {
            limit = {
                NOT = {
                    has_trait_category = lifestyle
                }
            }
            save_scope_as = this_trait
            root = {
                remove_trait = scope:this_trait
            }
        }
        every_in_list = {
            variable = chronomancy_trait_list
            save_scope_as = this_trait
            root = {
                add_trait = scope:this_trait
            }
        }
        clear_variable_list = chronomancy_trait_list

        set_local_variable = { name = modifier_counter value = 0 }

        while = {
            limit = {
                variable_list_size = {
                    name = chronomancy_modifier_list
                    value > local_var:modifier_counter
                }
            }

            ordered_in_list = {
                variable = chronomancy_modifier_list
                position = local_var:modifier_counter
                save_scope_as = modifier
            }
            ordered_in_list = {
                variable = chronomancy_modifier_duration_list
                position = local_var:modifier_counter
                save_scope_as = duration
            }

            every_spell_modifier_effect = { EFFECT = chronomancy_restore_modifier_effect }

            change_local_variable = {
                name = modifier_counter
                add = 1
            }
        }

        send_interface_toast = {
            title = chronomancy.toast
            desc = chronomancy.toast.desc
            left_icon = root
        }

        clear_variable_list = chronomancy_modifier_list
        clear_variable_list = chronomancy_modifier_duration_list
        remove_character_flag = chronomancy_active
    }
}

# Salvation Events
# You are saved by Salvation
wc_magic_spell_events.1000 = {
    type = character_event
    theme = light
    override_background = {
		reference = bp1_bonfire
	}
    title = wc_magic_spell_events.1000.title
    desc = {
        desc = wc_magic_spell_events.1000.desc
        first_valid = { # How did I die?
            triggered_desc = {
                trigger = {
                    scope:death_reason = flag:death_childbirth
                }
                desc = wc_magic_spell_events.1000.desc.death_childbirth
            }
            triggered_desc = {
                trigger = {
                    scope:death_reason = flag:death_duel
                }
                desc = wc_magic_spell_events.1000.desc.death_duel
            }
            triggered_desc = {
                trigger = {
                    scope:death_reason = flag:death_execution
                }
                desc = wc_magic_spell_events.1000.desc.death_execution
            }
            triggered_desc = {
                trigger = {
                    scope:death_reason = flag:death_dungeon
                }
                desc = wc_magic_spell_events.1000.desc.death_dungeon
            }
            triggered_desc = {
                trigger = {
                    scope:death_reason = flag:death_battle
                }
                desc = wc_magic_spell_events.1000.desc.death_battle
            }
            triggered_desc = {
                trigger = {
                    scope:death_reason = flag:death_stress
                }
                desc = wc_magic_spell_events.1000.desc.death_stress
            }
            triggered_desc = {
                trigger = {
                    OR = {
                        target_has_magic_illness_trigger = yes
                        target_has_illness_trigger = yes
                        target_has_major_illness_trigger = yes
                        target_has_injury_trigger = yes 
                        target_has_major_injury_trigger = yes
                        target_has_magic_injury_trigger = yes
                        scope:death_reason = flag:death_wounds
                    }
                }
                desc = wc_magic_spell_events.1000.desc.death_illness
            }
            desc = wc_magic_spell_events.1000.desc.death_none
        }
        first_valid = { # Acknowledge the caster if they are alive
            triggered_desc = {
                trigger = {
                    scope:salvation_caster ?= {
                        is_alive = yes 
                    }
                }
                desc = wc_magic_spell_events.1000.desc.caster_alive
            }
            desc = wc_magic_spell_events.1000.desc.caster_dead
        }
        desc = wc_magic_spell_events.1000.desc.middle
        first_valid = { # Do you believe in the light or not?
            triggered_desc = {
                trigger = {
                    faith = { has_doctrine = doctrine_light_magic_approved }
                }
                desc = wc_magic_spell_events.1000.desc.light_idolised
            }
            triggered_desc = {
                trigger = {
                    faith = { has_doctrine = doctrine_light_magic_accepted }
                }
                desc = wc_magic_spell_events.1000.desc.light_ok
            }
            triggered_desc = {
                trigger = {
                    faith = { has_doctrine = doctrine_light_magic_ignored }
                }
                desc = wc_magic_spell_events.1000.desc.nonbeliever
            }
            triggered_desc = {
                trigger = {
                    OR = {
                        faith = { has_doctrine = doctrine_light_magic_shunned }
                        faith = { has_doctrine = doctrine_light_magic_crime }
                    }
                }
                desc = wc_magic_spell_events.1000.desc.bad
            }
            desc = wc_magic_spell_events.1000.desc.none
        }
    }

    immediate = {
        var:salvation_caster = {
            save_scope_as = salvation_caster
        }
    }

    lower_center_portrait = {
        character = scope:salvation_caster
        animation = idle
    }

    left_portrait = {
        character = root
        animation = happiness
    }

    option = {
        name = wc_magic_spell_events.1000.a
        proc_salvation_effect = yes

        if = {
            limit = { # Don't double notify
                exists = scope:killer 
                NOT = { scope:killer = scope:salvation_caster }
            }
            scope:killer = {
                root = { save_scope_as = saved_character }
                trigger_event = {
                    id = wc_magic_spell_events.1002
                    days = { 2 5 }
                }
            }
        }

        if = {
            limit = {
                scope:salvation_caster = { is_alive = yes }
            }
            scope:salvation_caster = {
                root = { save_scope_as = saved_character }
                trigger_event = {
                    id = wc_magic_spell_events.1001
                    days = { 2 5 }
                }
            }
        }

        ai_chance = {
            base = 100
        }
    }

    option = {
        name = wc_magic_spell_events.1000.b
        if = {
			limit = { exists = scope:killer }
			death = { death_reason = death_salvation_killer killer = scope:killer }
		}
		else = {
			death = { death_reason = death_salvation }
		}

        if = {
            limit = {
                scope:salvation_caster = { is_alive = yes }
            }
            scope:salvation_caster = {
                root = { save_scope_as = saved_character }
                trigger_event = {
                    id = wc_magic_spell_events.1003
                    days = { 2 5 }
                }
            }
        }

        ai_chance = {
            base = 25
        }
    }
}

# You saved someone with Salvation
wc_magic_spell_events.1001 = {
    title = wc_magic_spell_events.1000.title
    desc = wc_magic_spell_events.1001.desc
    type = character_event
    theme = light

    immediate = {
        show_as_tooltip = {
            root = { save_scope_as = salvation_caster }
            scope:saved_character = {
                proc_salvation_effect = yes
            }
        }
    }

    left_portrait = {
        character = root
        animation = happiness
    }

    lower_center_portrait = {
        character = scope:saved_character
        animation = idle
    }

    option = {
        name = wc_magic_spell_events.1001.a
    }
}

# Someone you tried to kill was saved by Salvation
wc_magic_spell_events.1002 = {
    title = wc_magic_spell_events.1000.title
    desc = wc_magic_spell_events.1002.desc
    type = character_event
    theme = light

    immediate = {
        stress_impact = {
            base = major_stress_impact_gain
        }
        show_as_tooltip = {
            root = { save_scope_as = killer }
            scope:saved_character = {
                proc_salvation_effect = yes
            }
        }
    }

    left_portrait = {
        character = root
        animation = anger
    }

    lower_center_portrait = {
        character = scope:saved_character
        animation = idle
    }

    option = {
        name = wc_magic_spell_events.1002.a
    }
}

# You saved someone with Salvation, but they chose to die anyways
wc_magic_spell_events.1003 = {
    title = wc_magic_spell_events.1000.title
    desc = wc_magic_spell_events.1003.desc
    type = character_event
    theme = light

    immediate = {
        stress_impact = {
            base = medium_stress_impact_gain
        }
        show_as_tooltip = {
            scope:saved_character = {
                if = {
                    limit = { exists = scope:killer }
                    death = { death_reason = death_salvation_killer killer = scope:killer }
                }
                else = {
                    death = { death_reason = death_salvation }
                }
            }
        }
    }

    left_portrait = {
        character = root
        animation = sadness
    }

    lower_center_portrait = {
        character = scope:saved_character
        animation = idle
    }

    option = {
        name = wc_magic_spell_events.1003.a
    }
}

# You are saved by Salvation, but you were undead
wc_magic_spell_events.1004 = {
    title = wc_magic_spell_events.1000.title
    desc = wc_magic_spell_events.1004.desc
    type = character_event
    theme = light

    immediate = {
        remove_trait = being_undead
        proc_salvation_effect = yes
    }

    left_portrait = {
        character = root
        animation = happiness
    }

    lower_center_portrait = {
        character = scope:salvation_caster
        animation = idle
    }

    option = {
        name = {
            text = {
                first_valid = {
                    triggered_desc = {
                        trigger = {
                            OR = {
                                has_trait = paranoid
                                faith = { has_doctrine = doctrine_light_magic_shunned }
                                faith = { has_doctrine = doctrine_light_magic_crime }
                                culture = { has_same_culture_heritage = culture:scourge }
                            }
                        }
                        desc = wc_magic_spell_events.1004.a_sus
                    }
                    desc = wc_magic_spell_events.1004.a
                }
            }
        }

        if = {
            limit = {
                OR = {
                    has_trait = paranoid
                    faith = { has_doctrine = doctrine_light_magic_shunned }
                    faith = { has_doctrine = doctrine_light_magic_crime }
                    culture = { has_same_culture_heritage = culture:scourge }
                }
            }
            stress_impact = {
                base = medium_stress_impact_gain
            }
        }
    }
}

# You saved someone with Salvation, but they were undead
wc_magic_spell_events.1005 = {
    title = wc_magic_spell_events.1000.title
    desc = wc_magic_spell_events.1005.desc
    type = character_event
    theme = light

    immediate = {
        show_as_tooltip = {
            root = { save_scope_as = salvation_caster }
            scope:saved_character = {
                remove_trait = being_undead
                proc_salvation_effect = yes
            }
        }
    }

    left_portrait = {
        character = root
        animation = happiness
    }

    lower_center_portrait = {
        character = scope:saved_character
        animation = idle
    }

    option = {
        name = wc_magic_spell_events.1005.a
    }
}

# You summon your void leader
wc_magic_spell_events.2000 = {
    title = wc_magic_spell_events.2000.title
    desc = {
        first_valid = {
            triggered_desc = {
                trigger = { NOT = { scope:void_leader_caster ?= root } }
                desc = wc_magic_spell_events.2000.desc_caster
            }
            desc = wc_magic_spell_events.2000.desc
        }
    }
    type = character_event
    theme = shadow
    content_source = dlc_GOA

    left_portrait = {
        character = root
        animation = thinking
    }

    lower_center_portrait = {
        character = scope:void_leader_caster
        trigger = { exists = scope:void_leader_caster }
        animation = idle
    }

    right_portrait = {
        character = scope:void_leader
        animation = war_defender
    }

    immediate = {
        create_character = {
            template = void_leader_character
            save_scope_as = void_leader
        }
    }

    # Yass
    option = {
        name = wc_magic_spell_events.2000.a
        scope:void_leader = { add_character_modifier = wc_void_leader_modifier }
        trigger_event = {
            id = wc_magic_spell_events.2100 
            days = wc_spell_summon_void_leader_duration_days_value
        }
        add_courtier = scope:void_leader
        save_scope_as = void_recipient
        hidden_effect = {
            if = {
                limit = {
                    NOT = { scope:void_leader_caster ?= root }
                }
                scope:void_leader_caster = {
                    send_interface_toast = {
                        title = void_leader_accepted
                        left_icon = root
                        right_icon = scope:void_leader_caster
                        custom_tooltip = void_leader_accepted_desc
                        scope:void_recipient = {
                            add_opinion = {
                                target = scope:actor
                                modifier = grateful_opinion
                                opinion = 15
                            }
                        }
                    }
                }
            }
        }

        ai_chance = {
            base = 150
            opinion_modifier = {
                opinion_target = scope:void_leader
				multiplier = 1
            }
        }
    }


    # Nooo
    option = {
        name = wc_magic_spell_events.2000.b

        save_scope_as = void_recipient

        hidden_effect = {
             if = {
                limit = {
                    NOT = { scope:void_leader_caster ?= root }
                }
                scope:void_leader_caster = {
                    send_interface_toast = {
                        title = void_leader_rejected
                        left_icon = root
                        right_icon = scope:void_leader_caster
                        custom_tooltip = void_leader_rejected_desc
                        scope:void_recipient = {
                            add_opinion = {
                                target = scope:actor
                                modifier = insult_opinion
                                opinion = -15
                            }
                        }
                    }
                }
             }
        }

        ai_chance = {
            base = 0
            modifier = {
                add = 50
                NOT = { scope:void_leader_caster ?= root }
            }
        }
    }
}

# Void leader leaves
wc_magic_spell_events.2100 = {
    title = wc_magic_spell_events.2000.title
    desc = wc_magic_spell_events.2100.desc
    type = character_event
    theme = shadow
    content_source = dlc_GOA

    right_portrait = {
        character = scope:void_leader
        animation = war_defender
    }

    trigger = {
        scope:void_leader = { is_alive = yes }
    }

    option = {
        name = wc_magic_spell_events.2100.a

        scope:void_leader = {
            death = { 
                death_reason = death_twisting_nether
            }
        }
    }
}

# You become Voidborne, for the caster
wc_magic_spell_events.2200 = {
    title = wc_magic_spell_events.2200.title
    desc = wc_magic_spell_events.2200.desc
    type = character_event
    theme = shadow
    content_source = dlc_GOA

    left_portrait = {
        character = root
        animation = personality_bold
    }

    lower_center_portrait = var:voidborne_person

    immediate = {
        add_character_modifier = wc_voidborne_modifier
        show_as_tooltip = { var:voidborne_person = { add_trait = in_twisting_nether } } 
        var:voidborne_person = { save_scope_as = voidborne_person }
    }

    option = {
        name = wc_magic_spell_events.2201.opt
    }

    after = {
        var:voidborne_person = {
            set_variable = { name = voidborne_tormentor value = root }
            trigger_event = {
                id = wc_magic_spell_events.2201
                days = 2
            }
        }
    }
}

# You are now in the twisting nether because of the voidborne
wc_magic_spell_events.2201 = {
    title = wc_magic_spell_events.2200.title
    desc = wc_magic_spell_events.2201.desc
    type = character_event
    theme = shadow
    content_source = dlc_GOA

    left_portrait = {
        character = var:voidborne_tormentor
        animation = personality_bold
    }

    immediate = {
        add_trait = in_twisting_nether
    }

    option = {
        name = wc_magic_spell_events.2201.opt
    }

    after = {
        trigger_event = {
            id = wc_magic_spell_events.2202
            days = { 28 30 }
        }
    }
}

# You get to make a choice to get a strong hook or the voidborne or make them your rival
wc_magic_spell_events.2202 = {
    title = wc_magic_spell_events.2200.title
    desc = wc_magic_spell_events.2202.desc
    type = character_event
    theme = shadow
    content_source = dlc_GOA

    trigger = {
        var:voidborne_tormentor = { is_alive = yes }
    }

    on_trigger_fail = {
        trigger_event = wc_magic_spell_events.2203
    }

    immediate = {
        var:voidborne_tormentor = { save_scope_as = voidborne_tormentor }
    }

    left_portrait = {
        character = var:voidborne_tormentor
        animation = personality_bold
    }

    right_portrait = {
        character = root
        animation = thinking
    }

    option = { # Strong Hook
        name = wc_magic_spell_events.2202.a
        trigger = {
            NOT = { has_strong_hook = var:voidborne_tormentor }
        }

        add_hook = {
            type = voidborne_hook
            target = var:voidborne_tormentor
        }
    }

    option = { # Give stress
        name = wc_magic_spell_events.2202.b

        scope:voidborne_tormentor = {
            add_stress = major_stress_gain
        }
    }

    option = { # Try and escape earlier
        name = wc_magic_spell_events.2202.c
        trigger = {
            wc_mp_value >= 25
        }
        show_as_unavailable = {
            always = yes 
        }
        custom_tooltip = wc_magic_spell_events.2202.c.tt

        random_list = {
            50 = {
                desc = wc_magic_spell_events.2202.c.a
                send_interface_toast = {
                    title = wc_magic_spell_events.2202.c.a
                    type = event_toast_effect_bad
                    left_icon = root
                }
            }
            30 = {
                desc = wc_magic_spell_events.2202.c.a
                send_interface_toast = {
                    title = wc_magic_spell_events.2202.c.a
                    type = event_toast_effect_bad
                    left_icon = root
                    increase_wounds_effect = { REASON = magic }
                }
            }
            20 = {  
                desc = wc_magic_spell_events.2202.c.b
                send_interface_toast = {
                    title = wc_magic_spell_events.2202.c.b
                    type = event_toast_effect_good
                    left_icon = root
                    custom_tooltip = wc_magic_spell_events.2202.c.b.tt
                    add_character_flag = { flag = returning_from_nether_higher days = 100 }
                }
            }
            1 = { 
                send_interface_toast = {
                    title = wc_magic_spell_events.2202.c.d
                    type = event_toast_effect_good
                    left_icon = root
                    custom_tooltip = wc_magic_spell_events.2202.c.d.tt
                    add_character_flag = { flag = returning_from_nether days = 10 }
                    trigger_event = {
                        id = wc_magic_spell_events.2203
                        days = { 90 95 }
                    }
                }
            }
        }
    }

    after = {
        if = {
            limit = {
                NOT = { has_character_flag = returning_from_nether }
            }
            custom_tooltip = wc_magic_spell_events.2202.tt
            trigger_event = {
                id = wc_magic_spell_events.2203
                days = { 90 95 }
            }
        }
    }
}

# You are either let out of the twisting nether or not, naturally or tormentor died
wc_magic_spell_events.2203 = {
    title = wc_magic_spell_events.2203.title
    desc = {
        first_valid = {
            triggered_desc = {
                trigger = {
                    var:voidborne_tormentor = { is_alive = no }
                    has_character_flag = returning_from_nether
                }
                desc = wc_magic_spell_events.2203.desc_return_dead
            }
            triggered_desc = {
                trigger = {
                    has_character_flag = returning_from_nether
                }
                desc = wc_magic_spell_events.2203.desc_return
            }
            desc = wc_magic_spell_events.2203.desc_stuck
        }
    }
    type = character_event
    theme = shadow
    content_source = dlc_GOA

    left_portrait = {
        character = var:voidborne_tormentor
        animation = personality_bold
    }

    trigger = {
        is_alive = yes
        has_trait = in_twisting_nether
    }

    on_trigger_fail = {
        var:voidborne_tormentor = { trigger_event = wc_magic_spell_events.2204 }
    }

    immediate = {
        if = {
            limit = {
                var:voidborne_tormentor = { is_alive = no }
            }
            add_character_flag = { flag = returning_from_nether days = 1 }
        }
        else = {
            random_list = {
                50 = {
                    modifier = {
                        add = -25
                        has_character_flag = returning_from_nether_higher
                    }
                }
                50 = { add_character_flag = { flag = returning_from_nether days = 1 } }
            }
        }
    }

    # Still stuck
    option = {
        name = wc_magic_spell_events.2203.a
        trigger = {
            NOT = { has_character_flag = returning_from_nether }
        }
        custom_tooltip = wc_magic_spell_events.2202.tt
        add_stress = miniscule_stress_gain
        trigger_event = {
            id = wc_magic_spell_events.2203
            days = { 90 95 }
        }
    }

    # I'm free!
    option = {
        name = wc_magic_spell_events.2203.b
        trigger = { has_character_flag = returning_from_nether }
        remove_trait = in_twisting_nether 
        if = {
            limit = {
                var:voidborne_tormentor = { is_alive = yes }
            }
            var:voidborne_tormentor = {
                trigger_event = {
                    id = wc_magic_spell_events.2204
                }
            }
        }
        remove_variable = voidborne_tormentor
    }
}

# Your prisoner has been let free or died
wc_magic_spell_events.2204 = {
    title = wc_magic_spell_events.2204.title
    desc = wc_magic_spell_events.2204.desc
    type = character_event
    theme = shadow
    content_source = dlc_GOA

    left_portrait = {
        character = root
        animation = stress
    }

    lower_center_portrait = var:voidborne_person

    immediate = {
        remove_character_modifier = wc_voidborne_modifier
        remove_variable = voidborne_prowess
        remove_variable = voidborne_person
    }

    option = {
        name = wc_magic_spell_events.2204.opt
    }
}


wc_magic_spell_events.9000 = {
    hidden = yes
    trigger = {
        has_trait = incapable
    }
    immediate = {
        remove_trait = incapable
    }
}